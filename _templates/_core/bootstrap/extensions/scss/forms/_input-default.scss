// INPUTS
// Formato default para: inputs, textarea e selects
// not(.form-control) evita conflito com a classe 'form-control' do bootstrap

	input[type="text"]:not(.form-control),
	input[type="password"]:not(.form-control),
	input[type="datetime"]:not(.form-control),
	input[type="datetime-local"]:not(.form-control),
	input[type="date"]:not(.form-control),
	input[type="month"]:not(.form-control),
	input[type="time"]:not(.form-control),
	input[type="week"]:not(.form-control),
	input[type="number"]:not(.form-control),
	input[type="email"]:not(.form-control),
	input[type="url"]:not(.form-control),
	input[type="search"]:not(.form-control),
	input[type="tel"]:not(.form-control),
	input[type="color"]:not(.form-control),
	textarea:not(.form-control),
	select.no-chosen:not(.form-control) // select sem o 'chosen'
	{
		// Copia da class '.form-control' em 'CORE/bootstrap/scss/_forms.scss'

		//-> {REMOVED} display: block;
	    //-> {REMOVED} width: 100%;
		max-width: 100%!important; //-> {ADD}
	    // // Make inputs at least the height of their button counterpart (base line-height + padding + border)
	    // height: $input-height;
	    padding: $input-btn-padding-y $input-btn-padding-x;
	    font-size: $font-size-base;
	    line-height: $input-btn-line-height;
	    color: $input-color;
	    background-color: $input-bg;
	    // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214.
	    background-image: none;
	    background-clip: padding-box;
	    border: $input-btn-border-width solid $input-border-color;

	    // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
	    @if $enable-rounded {
	      // Manually use the if/else instead of the mixin to account for iOS override
	      border-radius: $input-border-radius;
	    } @else {
	      // Otherwise undo the iOS default
	      border-radius: 0;
	    }

	    @include box-shadow($input-box-shadow);
	    @include transition($input-transition);

	    // Unstyle the caret on `<select>`s in IE10+.
	    &::-ms-expand {
	      background-color: transparent;
	      border: 0;
	    }

	    // Customize the `:focus` state to imitate native WebKit styles.
	    @include form-control-focus();

	    // Placeholder
	    &::placeholder {
	      color: $input-color-placeholder;
	      // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
	      opacity: 1;
	    }

	    // Disabled and read-only inputs
	    //
	    // HTML5 says that controls under a fieldset > legend:first-child won't be
	    // disabled if the fieldset is disabled. Due to implementation difficulty, we
	    // don't honor that edge case; we style them as disabled anyway.
	    &:disabled,
	    &[readonly] {
	      background-color: $input-bg-disabled;
	      // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
	      opacity: 1;
	    }
	}
	select.no-chosen:not(.form-control) {
	  &:not([size]):not([multiple]) {
	    $select-border-width: ($border-width * 2);
	    height: calc(#{$input-height} + #{$select-border-width});
	  }

	  &:focus::-ms-value {
	    // Suppress the nested default white text on blue background highlight given to
	    // the selected option text when the (still closed) <select> receives focus
	    // in IE and (under certain conditions) Edge, as it looks bad and cannot be made to
	    // match the appearance of the native widget.
	    // See https://github.com/twbs/bootstrap/issues/19398.
	    color: $input-color;
	    background-color: $input-bg;
	  }
	}
